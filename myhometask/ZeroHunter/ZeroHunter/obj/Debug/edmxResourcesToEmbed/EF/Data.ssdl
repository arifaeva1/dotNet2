<?xml version="1.0" encoding="utf-8"?>
<Schema Namespace="ZeroHuntModel.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2012" Alias="Self" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
  <!--Errors Found During Generation:
warning 6002: The table/view 'ZeroHunt.dbo.Employees' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
  <EntityType Name="Employees">
    <Key>
      <PropertyRef Name="Id" />
      <PropertyRef Name="Name" />
      <PropertyRef Name="Gender" />
      <PropertyRef Name="Dob" />
      <PropertyRef Name="Status" />
    </Key>
    <Property Name="Id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="Name" Type="varchar" MaxLength="50" Nullable="false" />
    <Property Name="Gender" Type="varchar" MaxLength="10" Nullable="false" />
    <Property Name="Dob" Type="datetime" Nullable="false" />
    <Property Name="Status" Type="varchar" MaxLength="50" Nullable="false" />
  </EntityType>
  <!--Errors Found During Generation:
warning 6002: The table/view 'ZeroHunt.dbo.Foods' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
  <EntityType Name="Foods">
    <Key>
      <PropertyRef Name="Id" />
      <PropertyRef Name="Status" />
    </Key>
    <Property Name="Id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="Status" Type="varchar" MaxLength="50" Nullable="false" />
  </EntityType>
  <EntityContainer Name="ZeroHuntModelStoreContainer">
    <EntitySet Name="Employees" EntityType="Self.Employees" store:Type="Tables" store:Schema="dbo">
      <DefiningQuery>SELECT 
    [Employees].[Id] AS [Id], 
    [Employees].[Name] AS [Name], 
    [Employees].[Gender] AS [Gender], 
    [Employees].[Dob] AS [Dob], 
    [Employees].[Status] AS [Status]
    FROM [dbo].[Employees] AS [Employees]</DefiningQuery>
    </EntitySet>
    <EntitySet Name="Foods" EntityType="Self.Foods" store:Type="Tables" store:Schema="dbo">
      <DefiningQuery>SELECT 
    [Foods].[Id] AS [Id], 
    [Foods].[Status] AS [Status]
    FROM [dbo].[Foods] AS [Foods]</DefiningQuery>
    </EntitySet>
  </EntityContainer>
</Schema>